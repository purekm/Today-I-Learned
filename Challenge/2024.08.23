파이썬 리스트와 딕셔너리 사용법 정리
리스트(List)란?

파이썬의 리스트는 여러 값을 하나의 변수에 저장할 수 있는 자료형이다. 
리스트는 대괄호([])로 감싸고, 각 요소는 쉼표로 구분하여 작성한다. 예를 들어, my_list = [1, 2, 3, 4]는 4개의 요소를 가진 리스트이다.

리스트의 인덱싱과 슬라이싱

리스트의 요소는 인덱스를 사용하여 접근할 수 있다. 
인덱스는 0부터 시작하며, 음수를 사용하면 리스트의 끝에서부터 역순으로 접근할 수 있다. 예를 들어, my_list[-1]은 리스트의 마지막 요소를 반환한다.
리스트는 슬라이싱(Slicing)을 통해 부분 리스트를 추출할 수 있다. 
예를 들어, my_list[1:3]은 리스트의 두 번째와 세 번째 요소를 반환한다.

리스트의 주요 메서드

append() 메서드는 리스트의 끝에 새로운 요소를 추가한다.
remove() 메서드는 리스트에서 특정 값을 제거한다.
insert() 메서드는 리스트의 특정 위치에 요소를 삽입한다.

딕셔너리(Dictionary)란?

딕셔너리는 키(key)와 값(value) 쌍을 저장하는 자료형이다. 중괄호({})를 사용하며, 각 키-값 쌍은 콜론(:)으로 구분한다. 
예를 들어, my_dict = {'name': 'Alice', 'age': 25}는 이름과 나이를 저장하는 딕셔너리이다.
딕셔너리의 요소 접근

딕셔너리의 요소는 키를 사용하여 접근할 수 있다. 
예를 들어, my_dict['name']은 'Alice'를 반환한다. 딕셔너리에 존재하지 않는 키를 사용하려고 하면 KeyError가 발생할 수 있다.

딕셔너리의 주요 메서드

get() 메서드는 키를 사용해 값을 가져오며, 키가 없을 경우 기본값을 반환할 수 있다.
keys() 메서드는 딕셔너리의 모든 키를 반환한다.
values() 메서드는 딕셔너리의 모든 값을 반환한다.

리스트와 딕셔너리의 차이점

리스트는 순서가 있는 요소들의 집합이고, 딕셔너리는 순서가 없는 키-값 쌍의 집합이다. 
리스트는 인덱스를 사용해 요소에 접근하지만, 딕셔너리는 키를 사용해 값을 찾는다.