기존의 lecture 폴더의 Operating System Structure에 대한 내용을 수정 및 추가했다.

System Services:
운영체제는 사용자와 프로그램이 상호작용할 수 있는 환경을 제공하며, 이 환경에는 사용자 인터페이스, 프로그램 실행, I/O 작업, 파일 시스템 조작, 통신, 오류 탐지 등의 서비스가 포함됨. 
또한, 리소스 할당, 로깅, 보호 및 보안 등의 시스템 서비스도 제공됨.

애플리케이션이 운영체제에 종속적인 이유:
애플리케이션이 특정 운영체제에 종속되는 이유에 대한 설명이 추가되었음. 
이는 운영체제마다 고유한 시스템 호출과 파일 형식을 가지고 있기 때문이며, 다른 운영체제에서 동일한 애플리케이션을 실행하려면 별도로 컴파일하거나, 인터프리터를 사용하는 방법이 필요함.

Performance Tuning:
운영체제의 성능을 최적화하기 위한 성능 튜닝 도구와 방법에 대한 설명이 추가되었음. 
성능 튜닝은 시스템의 병목 현상을 제거하고, 시스템의 동작을 모니터링하고 분석하여 성능을 개선하는 과정임. 이 과정에서 top 프로그램, Windows Task Manager와 같은 도구들이 사용됨.

Tracing and Debugging Tools:
시스템 콜의 추적 및 디버깅을 위한 도구들에 대한 설명이 추가되었음. 
예를 들어, strace, gdb, perf, tcpdump와 같은 도구들을 활용하여 시스템 콜을 추적하고, 네트워크 패킷을 수집하는 방법이 설명되었음.

System Boot:
시스템 부팅 과정에서의 BIOS, UEFI, GRUB, 커널 로딩 등에 대한 상세한 설명이 추가되었음. 
시스템이 전원이 켜지면, BIOS 또는 UEFI에 의해 부트스트랩 로더가 실행되고, 운영체제 커널이 메모리에 로드되며, 이후 시스템이 정상적으로 실행됨. 
이 과정에서 사용되는 GRUB와 같은 부트 로더에 대한 설명도 포함됨.

실시간 운영체제:
실시간 운영체제(RTOS)는 응답 시간이 중요한 시스템에서 사용되는 운영체제로, 정해진 시간 내에 작업을 처리해야 하는 요구사항을 충족시키기 위해 설계됨. 
예측 가능한 응답 시간이 가장 중요한 요소임.

    주요 특징
    1. 확정성(Determinism): RTOS는 일정한 시간 내에 모든 작업이 완료될 것임을 보장함. 이는 시스템이 일정한 주기나 이벤트에 대해 항상 일정한 시간 내에 응답해야 하는 환경에서 필수적임.
    2. 우선순위 기반 스케줄링(Priority-Based Scheduling): RTOS는 작업의 우선순위에 따라 스케줄링을 수행함. 높은 우선순위를 가진 작업은 즉시 처리되며, 이를 통해 중요한 작업이 지연 없이 실행될 수 있음.
    3. 미세한 시간 제어(Fine-Grained Timing Control): RTOS는 매우 짧은 시간 단위로 작업을 제어할 수 있음. 이는 센서나 제어 시스템과 같은 환경에서 필요한 빠르고 정밀한 시간 제어를 가능하게 함.

일반 운영체제와는 다르게 다양한 작업을 처리할 수 있도록 설계되었고, 작업의 처리 시간에 유연성이 있음.
