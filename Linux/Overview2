## 데스크톱 환경
GUI 환경 이용을 위해 사용자에게 제공되는 인터페이스 스타일
1. KDE : Qt 라이브러리 기반, 리눅스 뿐만 아니라 FreeBSD,Solaris,MS Windows, OS X등도 지원
2. GNOME : KDE의 대안, GNU 프로젝트를 통해 개발 (GPL, LGPL을 따름), GTK+ 라이브러리 기반
3. XFee

## 윈도 매니저
X 윈도 환경에서 윈도의 배치와 표현을 담당하는 시스템 소프트 웨어
KDE 환경에서는 Mutter(GNOME3부터), Metacity, KWin
GTK 환경에서는 Xfee 사용

## X 윈도 활용
1. xhost : X 서버에 접근할 수 있는 클라이언트 지정 및 해제 명령 (xhost - 192.168.10.100)
2. DISPLAY : X 클라이언트 프로그램이 실행될 때 표시되는 창이 설정되어 있는 환경변수 export DISPLAY = "203.247.51.100:0"
3. xauth : xhost를 사용하여 허가해도, 원치 않는 불필요한 클라이언트가 접속하는 문제 해결 가능 

## X 윈도 주요 응용 프로그램
1. evince : PDF, PS,EPS 등의 형식 지원
2. LibreOffice : Writer(워드 프로세서), Impress(프레젠테이션), Calc(스프레드 시트), Draw( 드로잉 프로그램)
3. Totem : Movie Player
4. 이미지 뷰어 : GIMP, ImageMagick

## Shell
1. Bourne 셸 : 스티븐 본이 개발
2. C 셸 : 빌 조이가 개발 / 히스토리, alias, 작업 제어 기능 포함
3. tcsh: C셸+ 명령어 완성 및 명령행 편집 기능 추가 지원
4. 콘 셸 : 데이브 콘
5. dash
6. Bash 셸: 현재 리눅스의 표준 셸 / 명령 히스토리, 명령어 완성(tab) 기능 지원하며, 브라이언 폭스가 GNU 프로젝트를 위해 개발

# 셸 변경
1. chsh
2. 사용자의 로그인 셸 정보 확인 : /etc/passwd 파일의 7번째 필드에 기록
3. /etc/shells : 사용 가능한 셸 정보 확인 가능

# 환경변수
- 프롬프트, PATH 변경 등과 같이 셸의 환경 정의하는 역할을 수행하는 변수

# Bash의 주요 기능
1. 명령어 히스토리 기능: 입력된 모든 명령들은 히스토리 리스트 버퍼에 스택으로 저장
- !! : 마지막에 사용한 명령 실행
- history 5 : 최근 입력한 마지막 5개 명령어 목록 출력
- !5 : 히스토리 명령 목록 번호 중 5번에 해당하는 명령 실행
- !?al? : 가장 최근에 실행한 명령 중 al 문자열을 포함하는 명령 실행
- HISTSIZE : 히스토리에 저장되는 명령 개수 제한

2. 파이프 : 어떤 프로세스의 표준 출력이 다른 프로세스의 표준 입력으로 쓰이게 함
- 명령어 1 | 명령어 2

3. 특수문자
- '' (작은 따옴표) : 모든 문자나 특수 문자를 일반 문자 취급
- "" (큰 따옴표) : $,\,'' 를 제외한 모든 문자를 일반 문자 취급
- `` (역 따옴표) : 명령 대체 기능
- $ : 셸 변수 기호로,  뒤에 오는 문자열 변수 취급
- () : 부속 셸 / 하나의 셸 단위로 묶어줌 
- \ : 탈출 문자로, 바로 다음에 오는 특수문자 무효화 ex) a=1, b=2 echo \$a $b -> $a 2
4. 그룹 명령
- ; : 단순히 한줄에 명령어 나열
- && : 앞 명령어 성공 시 뒤 명령어 실행 (AND)
- & : 앞 명령여 background 실행과 동시에 뒤 명령어 실행
- || : 앞 명령어 성공시 결과 출력, 앞 명령어 실패 시 뒤 명령어 실행 (OR)
7. 산술 연산
- expr : 산술 연산 가능 ex) var2 = `expr $var + 1` :  var 변수에 1을 더하여, var2에 저장
8. Alias
- alias c = clear : "c" 입력시 clear 명령어 실행되도록 설정 
9. 관련 etc
- .bash_profile : 개인 사용자의 환경 변수와 시작 프로그램 관련 설정시 사용
- /etc/bashrc: 모든 사용자에게 적용되는 alias 함수 설정시 사용
- ~/.bashrc: alias와 function 설정하는 파일
- PS1: 프롬프트 변경시 사용되는 환경 변수

# 셸 프로그래밍

1. 기타 변수 대응법
- ${name} : name 변수에 들어있는 값으로 치환
- ${#name} : name 변수의 문자열 길이 반환

2. Argument 변수
- $0 : 실행된 셸 스크립트 명
- $1,$2 : 각각 스크립트에 넘겨진 1번째, 2번째 argument
- $# : 스크립트에 넘겨진 argument 개수
- $? : 실행한 뒤 반환 값으로 참이면 0, 거짓이면 1 반환

3. 셸 변수 관련 명령어
- set : 셸 변수 및 값 출력
- env : 환경변수 출력
- export : 전연변수 개념

4. 간단한 조건식
- [A [-eq B] : Equal, A=B 이면 참
- [A -ne B] : Not Equal
- [A -gt B] : Greater than, A>B이면 참
- [A -ge B] : Greater equal, A>=B 이면 참
- [A -lt B] : Less than
- [A -le B] : Less equal

5.ECHO
[posein@www ~]$ user=lin
[posein@www ~]$ echo $user
lin
[posein@www ~]$ echo $USER
posein

6. - /sbin/nologin : 시스템 계정에 설정되는 셸

## 프로세스
1. 정의
- 실행중인 프로그램
- PCB을 지닌 프로그램
- 프로그램 카운터를 지닌 프로그램
- 능동적 개체, 순차적으로 수행

2. 생성
- fork : 프로세스 생성
- exec : 원래 프로세스를 새로운 프로세스로 대체
Zombie 프로세스 : 부모가 종료된 후에 자식이 남아있는 경우(부모 소멸시 자식도 소멸), kill -9로 강제종료 가능

# 멀티태스킹과 작업 전환
1. Foreground 프로세스 : 셸에서 명령 실행 시 해당 프로세스가 종료될 때 까지 대기
2. Background 프로세스 : 뒤에서 실행시키는 방법으로, 명령어 뒤에 & 추가
3. fore -> back 전환
- ctrl + z : 작업중인 프로세스 대기
- jobs : 작업 상태 확인
- fg %작업번호 (%생략가능하며, 생략시 포어그라운드로 전환)
- bg: 작업 일시 중단된 상태에서 해당 명령어 입력시 백그라운드로 전환

# 시그널
프로세스끼리 서로 통신할 때 사용
SIGHUP (HUP)	1	터미널 접속 종료 시 전송 / 데몬 설정 변경 적용 시 사용	kill -1 PID
SIGINT (INT)	2	키보드 인터럽트 (Ctrl + C) / 실행 중지	kill -2 PID
SIGQUIT (QUIT)	3	키보드 종료 (Ctrl + \)	kill -3 PID
SIGKILL (KILL)	9	강제 종료 (무조건 종료)	kill -9 PID
SIGTERM (TERM)	15	정상 종료 (기본 종료 시그널)	kill PID (기본값)
SIGCONT (CONT)	18	정지된 프로세스 재시작	kill -18 PID
SIGSTOP (STOP)	19	강제 정지 (재개 불가)	kill -19 PID
SIGTSTP (TSTP)	20	Ctrl + Z (일시 정지, 재개 가능)	fg, bg

SIGKILL (9) : 프로세스를 무조건 종료 (종료 후 복구 불가)
SIGTERM (15) : 프로세스가 종료될 기회를 줌 (기본 kill 시그널)
SIGSTOP (19) vs SIGTSTP (20)
SIGSTOP: kill -STOP PID (일시 정지, 다시 실행하려면 SIGCONT 필요)
SIGTSTP: Ctrl + Z (쉘에서 fg, bg로 쉽게 재개 가능)

# 데몬
주기적이고, 지속적인 서비스 요청 처리를 위해 계속 실행되는 프로세스로, 백그라운드에서 실행되며 주로 이름 뒤에 d를 붙임
1. 방법
- standalone: 보통 부팅 시 실행하며, 해당 프로세스가 메모리에 계속 상주하며 클라이언트의 서비스 요청 처리
- inted : 관련 프로세스가 메모리에 항상 상주X, 요청이 들어왔을 때 실행

2. 실행
- /etc/rc.d : 부팅 관련 정보 저장
- /etc/init.d, /etc/rc0.d~rc6.d : 데몬 실행 조절
- systemctl : 해당 명령어로 데몬 제어
- systemctl stop sshd : 실행 상태인 sshd 데몬 중지
- systemctl status sshd : sshd 데몬의 실행 여부 확인

3. 관련 유틸리티 
- ntsysv : 텍스트 환경에서 커서를 이용하여 부팅 중 자동으로 실행되는 서비스 설정가능한 유틸리티
- chkconfig : 텍스트 기반의 명령어 프로그램
- 런레벨 3(콘솔모드 / 텍스트 모드)으로 부팅시 httpd가 자동 실행되도록 설정 : chkconfig httpd on || service httpd start
와 동일
- 시스템 재부팅 시에도 telnet 서비스 사용 가능하도록 설정 : chkconfig telnet on

- 네트워크 관련 설정 파일 변경 후 네트워크 데몬 재시작:
service network restart
또는
/etc/rc.d/init.d/network restart
또는
/etc/init.d/network restart

- 현재 터미널에서 아파치 웹 서버 데몬(httpd) 실행:
/etc/rc.d/init.d/httpd start  # 중간 디렉터리 생략 가능
 또는
service httpd start  # start → stop, restart 등으로 변경 가능

chkconfig는 SysVinit(구형 시스템) 기반에서 사용
systemctl은 systemd(신형 시스템) 기반에서 사용
예: systemctl enable httpd (자동 실행)
예: systemctl restart network (네트워크 재시작)
최신 리눅스에서는 chkconfig보다 systemctl을 사용!

## 네트워크의 이해
LAN : 근거리 통신망

1. star 형
- 중앙 제어기를 중심으로 모든 기기 point to point 방식으로 연결
- 단말기 추가 및 오류 진단 용이
- 설치 비용 많이 듦
- 회선 수 증가 시 제어 복잡
- 중앙 컴퓨터 고장 시 전체 네트워크에 영향

2. 망(Mesh)형
- 스타형와 링 형이 혼합된 형태
- 상호 간 그물 형태로 연결
- 설치비용 많이 듦
- 장애 발생시 다른 시스템에 영향이 적음

3. 버스형
- 하나의 통신 회선에 여러 컴퓨터 연결
- 컴퓨터 수에 따라 네트워크 성능 좌우
- 신호 반사에 의한 상호 간섭 방지를 위해 종단에 종단기 존재

# LAN 전송 방식 - 이더넷
1. 각 기기들이 48비트 길이의 고유한 MAC 주소를 기반으로 데이터 교환
2. BNC, UTP 등의 케이블 사용
3. 허브, 스위치 등의 장치이용
4. 매체 표기법
- 10BASE-5 : 10Mbps / 동축 케이블
- 100BASE-TX : 100Mbps / UTP
- 100BASE-FX : 100Mbps / 광케이블

# LAN 구성 장비
1. 케이블
- T568B : 일반적인 이더넷 연결에 사용
2. MAN
- LAN과 WAN의 중간 형태( 위성 도시 등 연결)
- DQDB(Distributed Queue Dual Bus) : MAN을 위한 국제 표준안

# WAN
1. 회선 교환 방식
- 송수신 호스트간 데이터 전송을 위한 연결 경로 설정 후 전송
- 고정된 대역폭 할당받아 전송
- 안정적인 데이터 전송률

2. 패킷 교환 방식
- 동적 전송 대역폭 : 모든 데이터가 같은 경로로 전송되진 않을 수 있음
- 이론상 호스트의 무제한 수용 가능

3. 관련 프로토콜
- 셀 릴레이 : 53Byte의 고정 길이 패킷을 이용하여 순서대로 자료 전송

# 네트워크 장비
1. Repeater : 물리 계층에서 동작
- 입력된 신호 증폭하여 중계하는 장치
- 디지털 방식의 통신 선로에서 전송 신호를 재생하여 전달하는 통신 장치
- LAN 선로의 길이가 물리적 한계에 부딪쳤을 때 물리적, 논리적 확장

2. Bridge
- 데이터링크 계층에 있는 여러 개의 네트워크 세그먼트 연결
- 물리적인 계층에 있는 repeater나 hub의 기능
- 특정 네트워크로부터 오는 통신량 조절

## 프로토콜
1. 기본 구성 요소
- 구문, 의미, 순서

2. 프로토콜 기능
- 주소 및 순서 지정
- 단편화와 재조합
- 흐름, 오류, 연결제어
- 동기화
- 캡슐화
- 멀티플렉싱

3. 프로토콜 제정 기관
- ISO : OSI 모델 제정
- IEEE : LAN, MAN 표준 제정
- ANSI
- EIA : 케이블 구격
- ITU-T : 전기 통신의 개선 및 효율적인 사용을 위한 국제기구

4. 프로토콜 번호 : /etc/protocols 에서 확인 가능
5. 포트 번호 : /etc/services 에서 확인 가능

포트번호 서비스	     설명
20	    FTP-Data	파일 전송 시 데이터 채널로 사용
21	    FTP	        파일 전송 제어용 (명령어 송수신)
22	    SSH	        보안 쉘 접속 (원격 접속)
23	    TELNET	    원격 접속 (보안 취약)
25	    SMTP	    이메일 전송 프로토콜
53	    DNS	        도메인 네임 서비스
80	    HTTP	    웹 서버 (기본 웹 통신)
443	    HTTPS	    보안 웹 서버 (SSL/TLS 암호화)
110	    POP3	    이메일 수신 프로토콜
143	    IMAP	    이메일 수신 (POP3보다 기능 많음)

FTP(File Transfer Protocol): 파일 전송 프로토콜
명령어	        설명
mget	        원격 서버에서 여러 개의 파일 다운로드
mdelete	        여러 개의 파일을 한 번에 삭제
mput	        여러 개의 파일을 한 번에 업로드
get 파일명	    원격 서버에서 단일 파일 다운로드
put 파일명	    로컬 파일을 원격 서버에 업로드
ls	            원격 서버의 파일 목록 보기
lcd [디렉터리]	로컬 디렉터리 변경
cd [디렉터리]	원격 서버 디렉터리 이동
bye / quit	    FTP 세션 종료

# 도메인 네임
- /etc/hosts 파일 사용하여 친숙한 컴퓨터의 이름을 IP 주소에 매핑
- ICANN : 비영리 기관이며, 인터넷 도메인 관리와 정책 결정하는 국제 기구

# 네트워크 환경
점보 프레임 - 이더넷 프레임 크기를 1500바이트(기본 MTU) 이상으로 확장한 것으로 최소값 15000바이트\
- ifconfig : 현재 설정된 점보 프레임 설정값 확인 및 변경 가능
- 스위치 네트워크 인터페이스 둘 다 지원해야 사용 가능

# 리눅스에서 지원하는 네트워크 하드웨어
1. local loopback
2. enpx : 이더넷 카드 인터페이스 장치
3. pppx : PPP장치
4. docker() : 가상화 사용시 설정되는 네트워크 장치
**Zero Configuration Networking** : DHCP환경이 없는 네트워크에서 peer to peer 연결이나 Wireless 환경에서 관리자 수동 설정없이 네트워킹 가능한 환경 만들기 위한 규약

# netstat : 네트워크 연결 상태 출력
- netstat -anp : 모든 소켓의 PID, 프로그램명 출력
- LISTEN : 서버에서 클라이언트로부터 들어오는 패킷을 위해 소켓을 열고 기다리는 상태
- ESTABLISHED : 3way-Handshaking
- SYN_RECEIVED : 서버 시스템이 원격 클라이언트로부터 접속 요구 받아 클라이언트에게 응답 완료
- CLOSE_WAIT : 원격 호스트는 종료
- TIME_WAIT : 패킷 처리는 끝났지만 분실을 우려해 소켓 열은채로 대기

ehtool : 이더넷 카드 설정 정보 출력 및 변경
mii-tool : 네트워크 인터페이스 상태 점검 및 설정하는 유틸
ss : 소켓 상태 출력 / netstat 와 유사
tracepath : ihd.or.kr 서버까지의 이동경로 확인 가능

# 네트워크 관련 파일 및 디렉터리
1. /etc/sysconfig/network-scripts 디렉터리 : 네트워크 인터페이스 환경설정과 관련된 파일 및 스크립트 저장되는 곳
- /etc/sysconfig/network-scripts/ifcfg-eth0 파일 : IP주소 지속적으로 이용하기 위해 수정해야 하는 파일 / 이더넷 카드를 하나만 장착한 시스템에서 IP주소가 기록되는 파일 / 파일에 기록 가능한 설정 값 : DNS1, NAME, PEERDNS
- etc/sysconfig/network : 부팅 시 네트워크 사용 유무 지정하는 파일 / NETWORKING 기록 가능
2. /etc/resolv.conf : 시스템에서 사용하는 네임서버(DNS 서버) 설정하는 파일
- 리눅스 시스템에 설정되어 있는 DNS 서버 주소 확인 가능
3. /etc/hosts : IP주소와 호스트명을 매핑시켜 데이터베이스처럼 사용하는 파일


