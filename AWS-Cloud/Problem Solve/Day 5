Q725
Amazon ElastiCache for Redis는 노드 수준 및 리전 수준에서 고가용성 제공하는
샤드 -> 데이터를 분산하여 처리 = 스케일링
다중 AZ -> 다른 가용 영역에 복제본 분산 -> 고가용성
복제그룹 -> 데이터 손실 최소화

Q724
Lambda + API Gateway 사용하는데 대기시간이 김
=> 콜드스타트 문제
프로비저닝된 동시성을 사용해서 Lambda를 미리 따뜻한 상태로 유지시킴
메모리 늘린다고 해결되지 않음

Q723
클러스터 배치 그룹
-> 인스턴스들을 물리적으로 가까운 위치로 배치해서 low latency와 high throughput 제공

전용 인스턴스 테넌시는 같은 하드웨어를 다른 고객과 공유 안하는 것으로, 보안 이슈 해결용
Elastic Interface 엑셀러레이터는 머신러닝 추론 가속용
용량 예약은 특정 AZ안에 인스턴스 수량을 확보하는 것일뿐, 최적화와는 별개

Q722
CloudFront는 ACM에서 인증을 받아야함.
CloudFront는 반드시 us-east-1리전의 ACM을 사용해야 함
공인 인증서는 ACM에서 무료로 발급해줌
사설 인증서는 비용이 발생

Q721
DB와 서버리스앱의 연결이 자주 끊김
=> Proxy를 사용해서 앱과 RDS사이에 connection pool을 만듦
=> 매번 DB연결을 새로하지 않고, 열려있는 연결을 재사용할 수 있게 함
=> 연결 수를 크게 줄여서 오류 발생률을 낮춤

Q719
DynamoDB는 아무래도 NoSQL이라서 "정의된 접근 패턴" 이라고 하면 RDMS 확률이 더 높음

Q718
읽기 전용 액세스만 주면 다운로드가 가능함 

Q717
큰 파일이 들어오면, 큰 단일 객체로 저장하여 객체를 부분적으로 업로드해야 함
Parquet은 열 기반 포맷으로, 쿼리 성능 향상 및 S3에서 읽는 데이터 양 줄어듬
Glue ETL-> Parquet 변환을 자동화하고 쉽게 해줌
Athena + Parquet은 좋은 조합
=> Athena는 S3에 저장된 데이터를 읽어 쿼리하는거라서 parquet이랑 쓰면 쿼리 속도는 빨리지고, 비용은 줄어듦

Q712
파티션 배치 그룹은 장애 도메인 격리를 위해 사용
지연시간 최소화에는 클러스터 배치 그룹이 맞음!