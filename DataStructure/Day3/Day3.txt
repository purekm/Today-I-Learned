header

헤더 파일이 필요한 이유
음식점을 예시로 들면 생각하기 쉽다.
메뉴판에 메뉴들을 적어놓으면 주인과 손님의 입장에서 모두 메뉴가 어떤게 있는지 알기 쉽다.
헤더 파일에 만든 함수를 정리해 놓음으로써 관리가 편해진다.

stdio.h 처럼 표준 라이브러리는 <>을 통해 불러오고,
내가 정의한 헤더 파일을 불러올때는 " "를 사용한다.
헤더 파일이 메인 코드와 같은 디렉토리에 존재하면 그냥 사용하면 되지만.
다른 디렉토리에 존재한다면 경로를 적어줘야 한다.

헤더 파일에는 함수만 적어야 하고(어떤 구조체, 클래스들이 들어가는가,
어떤 파라미터를 가지고 어떤 값을 반환하는가)
헤더 파일의 소스코드에는 함수를 정의해준다.

예시
myhead.h

int sum(int a,int b);

myhead.c

int sum(int a,int b){
    return (a+b);
}

파일 분할
#ifdef 는 기본적으로
#ifdef
#else
#define 내용~
#endif 의 구성을 가지고 사용한다. 
ifdef는 '만약 정의가 되어 있다면' 이란 뜻이다. 
뒤에 나온 내용이 정의 되어 있을 경우 #ifdef ~ #else 사이의 내용을 컴파일한다.
정의가 되어 있지 않을 경우 #else~ #endif 사이의 내용을 컴파일한다.

#ifndef 는 ifdef의 반대라고 생각하면 된다.
#ifndef
#define 내용~
#else
#endif 의 구성으로 사용한다.
ifndef는 '만약 정의되어 있지 않다면' 이란 뜻이다. 
정의 되어 있지 않을 경우, else까지의 내용을 컴파일한다.
정의가 되어 있을 경우, else 이후의 내용을 컴파일 한다.
(else 이후는 필요가 없으므로 생략 가능)

한번만 컴파일하면 되기에 else가 필요없다. 그래서 ifndef가 주로 사용된다.