구조체
사용자가 C언어의 기본 타입을 가지고 새롭게 정의할 수 있는 사용자 정의타입
다양한 타입의 변수 집합을 하나의 타입으로 나타낸 것이다.

문법
struct 구조체이름
{
    멤버변수1의 타입 멤버변수1의 이름;
    멤버변수2의 타입 멤버변수2의 이름;
    ...
}

example
struct score
{
    int scoreKOR;
    int scoreMAT;
    int scoreENG;
    int scoreSCI;
}
void main()
{
    struct score a;
}

a에 값을 넣을때는 a.을 사용
a.scoreKOR = 100; 

구조체 변수는 배열로도 선언 가능
배열에 값을 넣을때는 인덱스처럼 a[i]. 을 사용
struct score a[10];

a[0].scoreKOR = 100;
a[0].scoreMAT = 50;
....
a[1].scoreKOR = 75;

구조체 변수는 당연히 포인터로도 가능
struct score a; 일반변수
struct score a[10] 배열
struct score *p 포인터 p =&a;

일반 구조체 변수는 접근할때 .을 사용했지만
구조체 포인터 변수를 사용할때는 ->을 사용하여 접근
p -> scoreKOR = 100;

구조체를 선언을 쉽게하려면 typedef 를 사용

구조체를 정의하고 변수로 선언하려면 struct score a; 처럼
앞에 struct 을 붙여서 구조체라는 것을 알려줘야한다.

typedef struct_score{

}SCORE;
처럼 typedef라는 키워드를 사용하면 사용자 지정타입을 만들 수 있게해주므로
typedef 자료형 이름; 과 같이 사용하며
typedef struct_socre{...} SCORE; 은 구조체의 예를 한줄로 써본 예시이다.

typedef struct_student
{
    char name[20];
    int scoreKOR;
    int scoreMAT;
    int scoreSCI;
    int scoreENG;
} STUDENT;

STUDENT student[20];

student[index].scoreKOR 처럼 사용하면 된다.

Question. 하나의 struct안에 char name[20]을 선언했으면 student[0] 안에
name이 20개씩 들어가는가? 
Answer: student[index] 각각에 name[20]씩 들어가는게 맞다. 결론은 YES
