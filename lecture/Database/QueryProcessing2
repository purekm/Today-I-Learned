Query Processing 2
SQL 쿼리의 결과는 정렬이 필요할 수 있다.
입력 릴레이션이 정렬된 경우 쿼리 처리 효율이 향상
정렬 방법
	정렬 키에 인덱스 생성
	정렬 키에 인덱스를 생성하고 이를 사용하여 정렬된 순서로 릴레이션을 읽는다. 레코드에 대해 한번의 디스크 블록 access를 초래할 수 있음
	메모리에 적합한 릴레이션의 경우
	퀵소트 같은 기술 사용 가능. 릴레이션이 메모리에 적합하지 않은 경우가 많음
	메모리에 적합하지 않은 릴레이션의 경우
	External Sort-Merge가 좋은 선택

정렬된 Run 만들기
데이터를 메모리에 읽어들여 부분적으로 정렬된 런 생성
각 런을 파일에 저장하고 이 과정을 반복.
총 런의 수를 계산하고, 다음 단계인 병합으로 이동

비용 분석
한번의 패스에서   의 런을 병합할 수 있음
초기 런의 개수는   개 이다.
총 병합패스의 수는  이다.
초기 런 생성의 블록 전송을 2br. 각 병합패스마다 2br의 블록 전송이 있다.
결론적으로 총 블록 전송 수는  이다.
왜?? 초기 런 생성 비용이 2br인데 왜 br만 더해주냐???

데이터를 읽고 각 런을 쓰기위해 각각 한번의 탐색이 필요하다.
초기 런 생성을 위한 탐색 수는  이다.
각각 병합패스당  의 seek이 필요
마지막은 does not need to write to disk
Total number of seek 
	초기 런 생성 탐색 수 + (각각 병합패스당 seek * 총 병합패스의 수 ) -1
